// cartApiSlice.js
import { apiSlice } from './apiSlice';
import { CART_URL, } from '../Constant';

export const cartApiSlice = apiSlice.injectEndpoints({
  endpoints: (builder) => ({
    getCart: builder.query({
      query: () => `${CART_URL}`,
      providesTags: ['Cart'], // tag for cache
    }),
    addCartItem: builder.mutation({
      query: (item) => ({
        url: `${CART_URL}`,
        method: 'POST',
        body: item,
      }),
      invalidatesTags: ['Cart'], // invalidate cache after adding
    }),
    updateCartItem: builder.mutation({
      query: ({id,quantity}) => ({
        url: `${CART_URL}/${id}`,
        method: 'PUT',
        body: {quantity},
      }),
      invalidatesTags: ['Cart'], // invalidate to refetch
    }),
    deleteCartItem: builder.mutation({
      query: (id) => ({
        url: `${CART_URL}/${id}`,
        method: 'DELETE',
      }),
      invalidatesTags: ['Cart'], // invalidate to refetch
    }),
    mergeCart: builder.mutation({
      query: (items) => ({
        url: `${CART_URL}/merge`,
        method: 'POST',
        body: items,
      }),
      invalidatesTags: ['Cart'], // invalidate to refetch
    }),
  }),
  overrideExisting: false, // keeps existing endpoints if any
});

// Export hooks automatically generated by RTK Query
export const {
  useGetCartQuery,
  useAddCartItemMutation,
  useUpdateCartItemMutation,
  useDeleteCartItemMutation,
  useMergeCartMutation,
} = cartApiSlice;
